digraph G
{
  edge [fontname="FreeSans.ttf",fontsize=10,labelfontname="FreeSans.ttf",labelfontsize=10];
  node [fontname="FreeSans.ttf",fontsize=10,shape=record];
  Node1 [label="{TMotGNL\n|+ own\l+ SID\l|}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="own",arrowtail="open",fontname="FreeSans.ttf"];
  Node2 [label="{CKatBase\n|# gnl\l# mfw\l# ids\l# ctb\l# cbx\l# ech\l# mot\l# sct\l# eff\l# protocol\l# mMasterVersion\l# mMasterRevision\l|+ GetGNL()\l+ GetMFW()\l+ GetIDS()\l+ GetCTB()\l+ GetCBX()\l+ GetECH()\l+ GetMOT()\l+ GetSCT()\l+ GetEFF()\l+ CKatBase()\l+ ~CKatBase()\l+ init()\l+ recvMFW()\l+ recvIDS()\l+ recvCTB()\l+ recvGMS()\l+ recvCBX()\l+ recvECH()\l+ recvNMP()\l+ recvMPS()\l+ getProtocol()\l+ checkKatanaType()\l+ sendCBX()\l+ sendTPSP()\l+ getMasterFirmware()\l+ enableCrashLimits()\l+ disableCrashLimits()\l+ unBlock()\l+ setCrashLimit()\l+ setPositionCollisionLimit()\l+ setSpeedCollisionLimit()\l+ startSplineMovement()\l+ startFourSplinesMovement()\l+ sendSLMP()\l+ sendSLM()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCKatBase.html",tooltip="Base Katana class."];
  Node3 -> Node2 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="mfw",arrowtail="open",fontname="FreeSans.ttf"];
  Node3 [label="{TKatMFW\n|+ ver\l+ rev\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structTKatMFW.html",tooltip="[MFW] master firmware version/revision number"];
  Node4 -> Node2 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="cbx",arrowtail="open",fontname="FreeSans.ttf"];
  Node4 [label="{TKatCBX\n|+ inp\l+ out\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structTKatCBX.html",tooltip="[CBX] connector box"];
  Node5 -> Node2 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="sct",arrowtail="open",fontname="FreeSans.ttf"];
  Node5 [label="{TKatSCT\n|+ cnt\l+ arr\l+ desc\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structTKatSCT.html",tooltip="[SCT] every sens ctrl&#39;s attributes"];
  Node6 -> Node5 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="desc",arrowtail="open",fontname="FreeSans.ttf"];
  Node6 [label="{TSctDesc\n|+ ctrlID\l+ sens_res\l+ sens_count\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structTSctDesc.html",tooltip="sensor controller description (partly)"];
  Node7 -> Node5 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="arr",arrowtail="open",fontname="FreeSans.ttf"];
  Node7 [label="{CSctBase\n|# gnl\l# dat\l# protocol\l|+ GetGNL()\l+ GetDAT()\l+ ~CSctBase()\l+ init()\l+ recvDAT()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCSctBase.html",tooltip="Sensor Controller class."];
  Node8 -> Node7 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="gnl",arrowtail="open",fontname="FreeSans.ttf"];
  Node8 [label="{TSctGNL\n|+ own\l+ SID\l+ res\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structTSctGNL.html",tooltip="[GNL] controller generals"];
  Node2 -> Node8 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="own",arrowtail="open",fontname="FreeSans.ttf"];
  Node9 -> Node7 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="dat",arrowtail="open",fontname="FreeSans.ttf"];
  Node9 [label="{TSctDAT\n|+ cnt\l+ arr\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structTSctDAT.html",tooltip="[DAT] sensor data"];
  Node10 -> Node7 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="protocol",arrowtail="open",fontname="FreeSans.ttf"];
  Node10 [label="{CCplBase\n|# device\l# mMasterVersion\l# mMasterRevision\l|+ init()\l+ comm()\l+ ~CCplBase()\l+ getMasterFirmware()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCCplBase.html",tooltip="Abstract base class for protocol definiton."];
  Node11 -> Node10 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="device",arrowtail="open",fontname="FreeSans.ttf"];
  Node11 [label="{CCdlBase\n||+ send()\l+ recv()\l+ ~CCdlBase()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCCdlBase.html",tooltip="Abstract base class for devices."];
  Node12 -> Node2 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="ctb",arrowtail="open",fontname="FreeSans.ttf"];
  Node12 [label="{TKatCTB\n|+ cmdtbl\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structTKatCTB.html",tooltip="[CTB] command table defined in the firmware"];
  Node13 -> Node2 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="ech",arrowtail="open",fontname="FreeSans.ttf"];
  Node13 [label="{TKatECH\n|+ echo\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structTKatECH.html",tooltip="[ECH] echo"];
  Node14 -> Node2 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="eff",arrowtail="open",fontname="FreeSans.ttf"];
  Node14 [label="{TKatEFF\n|+ arr_segment\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structTKatEFF.html",tooltip="Inverse Kinematics structure of the endeffektor."];
  Node15 -> Node2 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="gnl",arrowtail="open",fontname="FreeSans.ttf"];
  Node15 [label="{TKatGNL\n|+ adr\l+ modelName\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structTKatGNL.html",tooltip="[GNL] general robot attributes"];
  Node16 -> Node2 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="mot",arrowtail="open",fontname="FreeSans.ttf"];
  Node16 [label="{TKatMOT\n|+ cnt\l+ arr\l+ desc\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structTKatMOT.html",tooltip="[MOT] every motor&#39;s attributes"];
  Node17 -> Node16 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="desc",arrowtail="open",fontname="FreeSans.ttf"];
  Node17 [label="{TMotDesc\n|+ slvID\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structTMotDesc.html",tooltip="motor description (partly)"];
  Node18 -> Node16 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="arr",arrowtail="open",fontname="FreeSans.ttf"];
  Node18 [label="{CMotBase\n|# gnl\l# aps\l# tps\l# scp\l# dyl\l# pvp\l# sfw\l# _calibrationParameters\l# _encoderLimits\l# _initialParameters\l# freedom\l# nmp\l# blocked\l# protocol\l|+ GetGNL()\l+ GetAPS()\l+ GetTPS()\l+ GetSCP()\l+ GetDYL()\l+ GetPVP()\l+ GetSFW()\l+ GetCLB()\l+ GetInitialParameters()\l+ GetEncoderTolerance()\l+ GetEncoderMinPos()\l+ GetEncoderMaxPos()\l+ GetEncoderRange()\l+ GetFreedom()\l+ GetBlocked()\l+ GetNmp()\l+ ~CMotBase()\l+ init()\l+ sendAPS()\l+ sendTPS()\l+ sendSCP()\l+ sendDYL()\l+ recvPVP()\l+ recvSCP()\l+ recvDYL()\l+ recvSFW()\l+ setSCP()\l+ setDYL()\l+ setTPSP()\l+ setTPSPDegrees()\l+ resetTPSP()\l+ setInitialParameters()\l+ setCalibrationParameters()\l+ setCalibrated()\l+ setTolerance()\l+ checkAngleInRange()\l+ checkEncoderInRange()\l+ inc()\l+ dec()\l+ mov()\l+ waitForMotor()\l+ incDegrees()\l+ decDegrees()\l+ movDegrees()\l+ resetBlocked()\l+ sendSpline()\l+ sendFourSplines()\l+ setSpeedLimits()\l+ setSpeedLimit()\l+ setAccelerationLimit()\l+ setPwmLimits()\l+ setControllerParameters()\l+ setCrashLimit()\l+ setCrashLimitLinear()\l+ setSpeedCollisionLimit()\l+ setPositionCollisionLimit()\l+ getParameterOrLimit()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classCMotBase.html",tooltip="Motor class."];
  Node19 -> Node18 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="_encoderLimits",arrowtail="open",fontname="FreeSans.ttf"];
  Node19 [label="{TMotENL\n|+ enc_range\l+ enc_minpos\l+ enc_maxpos\l+ enc_per_cycle\l+ enc_tolerance\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structTMotENL.html",tooltip="[ENL] limits in encoder values (INTERNAL STRUCTURE!)"];
  Node20 -> Node18 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="sfw",arrowtail="open",fontname="FreeSans.ttf"];
  Node20 [label="{TMotSFW\n|+ version\l+ subversion\l+ revision\l+ type\l+ subtype\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structTMotSFW.html",tooltip="[SFW] slave firmware"];
  Node1 -> Node18 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="gnl",arrowtail="open",fontname="FreeSans.ttf"];
  Node21 -> Node18 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="_initialParameters",arrowtail="open",fontname="FreeSans.ttf"];
  Node21 [label="{TMotInit\n|+ encoderOffset\l+ encodersPerCycle\l+ angleOffset\l+ angleRange\l+ rotationDirection\l+ angleStop\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structTMotInit.html",tooltip="Initial motor parameters."];
  Node22 -> Node18 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="_calibrationParameters",arrowtail="open",fontname="FreeSans.ttf"];
  Node22 [label="{TMotCLB\n|+ enable\l+ order\l+ dir\l+ mcf\l+ encoderPositionAfter\l+ isCalibrated\l+ dyl\l+ scp\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structTMotCLB.html",tooltip="Calibration structure for single motors."];
  Node23 -> Node22 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="scp",arrowtail="open",fontname="FreeSans.ttf"];
  Node23 [label="{TMotSCP\n|+ maxppwm\l+ maxnpwm\l+ kP\l+ kI\l+ kD\l+ kARW\l+ kP_speed\l+ kI_speed\l+ kD_speed\l+ maxppwm_nmp\l+ maxnpwm_nmp\l+ kspeed_nmp\l+ kpos_nmp\l+ kI_nmp\l+ crash_limit_nmp\l+ crash_limit_lin_nmp\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structTMotSCP.html",tooltip="[SCP] static controller parameters"];
  Node24 -> Node22 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="dyl",arrowtail="open",fontname="FreeSans.ttf"];
  Node24 [label="{TMotDYL\n|+ maxaccel\l+ maxdecel\l+ minpos\l+ maxpspeed\l+ maxnspeed\l+ maxcurr\l+ actcurr\l+ maxaccel_nmp\l+ maxpspeed_nmp\l+ maxnspeed_nmp\l+ maxcurr_nmp\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structTMotDYL.html",tooltip="[DYL] dynamic limits"];
  Node25 -> Node18 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="pvp",arrowtail="open",fontname="FreeSans.ttf"];
  Node25 [label="{TMotPVP\n|+ msf\l+ pos\l+ vel\l+ pwm\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structTMotPVP.html",tooltip="[PVP] position, velocity, pulse width modulation"];
  Node26 -> Node18 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="aps",arrowtail="open",fontname="FreeSans.ttf"];
  Node26 [label="{TMotAPS\n|+ mcfAPS\l+ actpos\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structTMotAPS.html",tooltip="[APS] actual position"];
  Node23 -> Node18 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="scp",arrowtail="open",fontname="FreeSans.ttf"];
  Node27 -> Node18 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="tps",arrowtail="open",fontname="FreeSans.ttf"];
  Node27 [label="{TMotTPS\n|+ mcfTPS\l+ tarpos\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structTMotTPS.html",tooltip="[TPS] target position"];
  Node10 -> Node18 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="protocol",arrowtail="open",fontname="FreeSans.ttf"];
  Node24 -> Node18 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="dyl",arrowtail="open",fontname="FreeSans.ttf"];
  Node28 -> Node2 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="ids",arrowtail="open",fontname="FreeSans.ttf"];
  Node28 [label="{TKatIDS\n|+ strID\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structTKatIDS.html",tooltip="[IDS] identification string"];
  Node10 -> Node2 [dir=back,color="darkorchid3",fontsize=10,style="dashed",label="protocol",arrowtail="open",fontname="FreeSans.ttf"];
}
